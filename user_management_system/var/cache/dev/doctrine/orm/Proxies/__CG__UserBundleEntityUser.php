<?php

namespace Proxies\__CG__\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \UserBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'dateOfBirth', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'loginName', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'emailIds', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'mobileNumbers', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'education', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'interests', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'bloodGroup', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'gender'];
        }

        return ['__isInitialized__', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'dateOfBirth', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'loginName', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'emailIds', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'mobileNumbers', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'education', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'interests', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'bloodGroup', '' . "\0" . 'UserBundle\\Entity\\User' . "\0" . 'gender'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateOfBirth($dateOfBirth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateOfBirth', [$dateOfBirth]);

        return parent::setDateOfBirth($dateOfBirth);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateOfBirth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateOfBirth', []);

        return parent::getDateOfBirth();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoginName($loginName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoginName', [$loginName]);

        return parent::setLoginName($loginName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoginName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoginName', []);

        return parent::getLoginName();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmailId(\UserBundle\Entity\UserMailAddress $emailId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmailId', [$emailId]);

        return parent::addEmailId($emailId);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmailId(\UserBundle\Entity\UserMailAddress $emailId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmailId', [$emailId]);

        return parent::removeEmailId($emailId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailIds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailIds', []);

        return parent::getEmailIds();
    }

    /**
     * {@inheritDoc}
     */
    public function addMobileNumber(\UserBundle\Entity\UserContactNumber $mobileNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMobileNumber', [$mobileNumber]);

        return parent::addMobileNumber($mobileNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMobileNumber(\UserBundle\Entity\UserContactNumber $mobileNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMobileNumber', [$mobileNumber]);

        return parent::removeMobileNumber($mobileNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobileNumbers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobileNumbers', []);

        return parent::getMobileNumbers();
    }

    /**
     * {@inheritDoc}
     */
    public function addEducation(\UserBundle\Entity\UserGraduation $education)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEducation', [$education]);

        return parent::addEducation($education);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEducation(\UserBundle\Entity\UserGraduation $education)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEducation', [$education]);

        return parent::removeEducation($education);
    }

    /**
     * {@inheritDoc}
     */
    public function getEducation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEducation', []);

        return parent::getEducation();
    }

    /**
     * {@inheritDoc}
     */
    public function addInterest(\UserBundle\Entity\UserAreaOfInterest $interest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInterest', [$interest]);

        return parent::addInterest($interest);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInterest(\UserBundle\Entity\UserAreaOfInterest $interest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInterest', [$interest]);

        return parent::removeInterest($interest);
    }

    /**
     * {@inheritDoc}
     */
    public function getInterests()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInterests', []);

        return parent::getInterests();
    }

    /**
     * {@inheritDoc}
     */
    public function setBloodGroup(\UserBundle\Entity\BloodGroup $bloodGroup = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBloodGroup', [$bloodGroup]);

        return parent::setBloodGroup($bloodGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getBloodGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBloodGroup', []);

        return parent::getBloodGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender(\UserBundle\Entity\Gender $gender = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

}
